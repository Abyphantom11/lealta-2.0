generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  STAFF
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  name         String?
  role         Role     @default(STAFF)
  createdAt    DateTime @default(now())
}

model Location {
  id       String    @id @default(cuid())
  name     String
  consumos Consumo[]
  createdAt DateTime @default(now())
}

model Cliente {
  id           String     @id @default(cuid())
  cedula       String     @unique // AUTH único del cliente (sin password)
  nombre       String
  correo       String
  telefono     String
  puntos       Int        @default(0)
  totalVisitas Int        @default(0)
  totalGastado Decimal    @default(0) @db.Decimal(12, 2)
  defaultCount Int        @default(0)
  riskLevel    String     @default("LOW") // LOW, MEDIUM, HIGH
  lastLogin    DateTime?
  portalViews  Int        @default(0)
  registeredAt DateTime   @default(now())
  consumos     Consumo[]
  visits       VisitLog[]
}

model Consumo {
  id             String    @id @default(cuid())
  clienteId      String
  locationId     String
  productos      Json // items parseados por OCR
  total          Decimal   @db.Decimal(12, 2)
  puntos         Int       @default(0)
  empleadoId     String // User.id que lo registró
  pagado         Boolean   @default(false)
  metodoPago     String?
  registeredAt   DateTime  @default(now())
  paidAt         DateTime?
  ticketImageUrl String? // imagen subida del ticket
  ocrText        String? // texto crudo del OCR

  cliente  Cliente  @relation(fields: [clienteId], references: [id])
  location Location @relation(fields: [locationId], references: [id])
}

model VisitLog {
  id        String   @id @default(cuid())
  clienteId String
  action    String // "portal_visit" | "menu_view" | "promo_view" | "check_in"
  metadata  Json?
  timestamp DateTime @default(now())

  cliente Cliente @relation(fields: [clienteId], references: [id])
}
