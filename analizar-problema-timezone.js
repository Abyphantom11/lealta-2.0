#!/usr/bin/env node

/**
 * üåç PROBLEMA DE TIMEZONE - SOLUCI√ìN
 * 
 * Vercel corre en UTC. Cuando es 2:47 AM hora local (lunes),
 * en UTC podr√≠a ser 7:47 AM (martes).
 * 
 * Esto hace que el servidor calcule un d√≠a comercial diferente.
 */

console.log('üåç AN√ÅLISIS DE TIMEZONE');
console.log('='.repeat(60));

const now = new Date();

// 1. Hora local
const horaLocal = now.getHours();
const minutoLocal = now.getMinutes();
const diaLocal = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'][now.getDay()];

console.log('\nüì± HORA LOCAL (Tu computadora):');
console.log(`   Hora: ${horaLocal}:${minutoLocal.toString().padStart(2, '0')}`);
console.log(`   D√≠a: ${diaLocal}`);
console.log(`   Timezone: ${Intl.DateTimeFormat().resolvedOptions().timeZone}`);

// Calcular d√≠a comercial local
let diaComercialLocal;
if (horaLocal < 4) {
  const ayer = new Date(now);
  ayer.setDate(ayer.getDate() - 1);
  diaComercialLocal = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'][ayer.getDay()];
  console.log(`   üè¢ D√≠a comercial LOCAL: ${diaComercialLocal} (antes de 4 AM = d√≠a anterior)`);
} else {
  diaComercialLocal = diaLocal;
  console.log(`   üè¢ D√≠a comercial LOCAL: ${diaComercialLocal} (despu√©s de 4 AM = d√≠a actual)`);
}

// 2. Hora UTC (como en Vercel)
const horaUTC = now.getUTCHours();
const minutoUTC = now.getUTCMinutes();
const diaUTC = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'][now.getUTCDay()];

console.log('\nüåê HORA UTC (Servidores de Vercel):');
console.log(`   Hora: ${horaUTC}:${minutoUTC.toString().padStart(2, '0')}`);
console.log(`   D√≠a: ${diaUTC}`);

// Calcular d√≠a comercial UTC (como lo hace Vercel)
let diaComercialUTC;
if (horaUTC < 4) {
  const ayerUTC = new Date(now);
  ayerUTC.setUTCDate(ayerUTC.getUTCDate() - 1);
  diaComercialUTC = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'][ayerUTC.getUTCDay()];
  console.log(`   üè¢ D√≠a comercial UTC: ${diaComercialUTC} (antes de 4 AM UTC = d√≠a anterior)`);
} else {
  diaComercialUTC = diaUTC;
  console.log(`   üè¢ D√≠a comercial UTC: ${diaComercialUTC} (despu√©s de 4 AM UTC = d√≠a actual)`);
}

// 3. Comparaci√≥n
console.log('\nüîç COMPARACI√ìN:');
console.log('‚îÄ'.repeat(60));
console.log(`LOCAL dice: "${diaComercialLocal}"`);
console.log(`VERCEL dice: "${diaComercialUTC}"`);

if (diaComercialLocal !== diaComercialUTC) {
  console.log('\n‚ùå ¬°AQU√ç EST√Å EL PROBLEMA!');
  console.log('‚îÄ'.repeat(60));
  console.log('El cliente (tu navegador) y el servidor (Vercel) est√°n');
  console.log('calculando d√≠as comerciales DIFERENTES debido al timezone.');
  console.log('');
  console.log('üìä Diferencia horaria:');
  const diff = horaLocal - horaUTC;
  console.log(`   ${Math.abs(diff)} horas (${diff > 0 ? 'adelantado' : 'atrasado'})`);
  console.log('');
  console.log('üéØ SOLUCI√ìN:');
  console.log('   1. Configurar timezone en la funci√≥n getCurrentBusinessDay');
  console.log('   2. O usar el timezone del negocio en lugar de UTC');
  console.log('   3. O crear elementos para AMBOS d√≠as cercanos');
} else {
  console.log('\n‚úÖ Los d√≠as comerciales coinciden');
  console.log('El problema debe estar en otra parte');
}

// 4. Verificar datos en BD
console.log('\nüìä VERIFICAR DATOS EN BD:');
console.log('‚îÄ'.repeat(60));
console.log(`Tienes elementos para d√≠a: "lunes"`);
console.log(`El servidor (Vercel) busca elementos para: "${diaComercialUTC}"`);

if (diaComercialUTC !== 'lunes') {
  console.log(`\n‚ùå ¬°POR ESO NO APARECEN!`);
  console.log(`El servidor busca "${diaComercialUTC}" pero t√∫ creaste para "lunes"`);
  console.log('');
  console.log('üí° SOLUCI√ìN R√ÅPIDA:');
  console.log(`   1. Crea elementos para "${diaComercialUTC}" tambi√©n`);
  console.log(`   2. O crea elementos SIN restricci√≥n de d√≠a (dia = null)`);
  console.log(`   3. O arregla el timezone en getCurrentBusinessDay`);
} else {
  console.log(`\n‚úÖ El d√≠a coincide, el problema debe estar en otro lado`);
}
