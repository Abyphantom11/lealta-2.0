/**
 * Monitor espec√≠fico para el nombre del negocio "love me"
 */

const PRODUCTION_URL = 'https://lealta.vercel.app';
const BUSINESS_ID = 'cmfw0fujf0000eyv8eyhgfzja';

async function monitorBusinessName() {
  console.log('üè¢ Monitoreando actualizaci√≥n del nombre del negocio...\n');
  console.log(`‚è∞ ${new Date().toLocaleTimeString()} - Esperando "love me"`);
  
  let attempts = 0;
  const maxAttempts = 8; // 4 minutos m√°ximo
  
  const checkName = async () => {
    attempts++;
    const timestamp = Date.now();
    
    console.log(`\nüì° Verificaci√≥n ${attempts}/${maxAttempts} - ${new Date().toLocaleTimeString()}`);
    
    try {
      const response = await fetch(`${PRODUCTION_URL}/api/portal/config-v2?businessId=${BUSINESS_ID}&t=${timestamp}`, {
        headers: {
          'Cache-Control': 'no-cache, no-store, must-revalidate',
          'Pragma': 'no-cache'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        
        const nombreEmpresa = data.data?.nombreEmpresa || data.data?.empresa?.nombre || 'No encontrado';
        const tarjetasCount = data.data?.tarjetas?.length || 0;
        
        console.log(`   Nombre actual: "${nombreEmpresa}"`);
        console.log(`   Tarjetas: ${tarjetasCount}`);
        
        // Verificar si ya est√° correcto
        if (nombreEmpresa === 'love me') {
          console.log('\nüéâ ¬°√âXITO! El nombre del negocio se actualiz√≥ correctamente');
          console.log('‚úÖ Ahora muestra "love me" en lugar de "Mi Negocio"');
          
          // Verificar tambi√©n las tarjetas por si acaso
          if (tarjetasCount > 0) {
            console.log('\nBonus - Estado de tarjetas:');
            data.data.tarjetas.forEach((tarjeta, i) => {
              const emoji = tarjeta.beneficio === '9 dadadasd' ? '‚úÖ' : '‚ùå';
              console.log(`   ${i + 1}. ${tarjeta.nivel}: ${emoji} "${tarjeta.beneficio}"`);
            });
          }
          
          return true; // √âxito!
        } else {
          console.log(`   ‚è≥ A√∫n muestra: "${nombreEmpresa}" (esperando "love me")`);
        }
        
      } else {
        console.log(`   ‚ùå Error HTTP: ${response.status}`);
      }
      
      return false; // Continuar monitoreando
      
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}`);
      return false;
    }
  };
  
  // Verificar inmediatamente
  const isReady = await checkName();
  if (isReady) return;
  
  // Configurar intervalo cada 30 segundos
  const interval = setInterval(async () => {
    const isReady = await checkName();
    
    if (isReady || attempts >= maxAttempts) {
      clearInterval(interval);
      
      if (attempts >= maxAttempts) {
        console.log('\n‚ö†Ô∏è Tiempo de espera agotado.');
        console.log('üí° El deploy puede necesitar m√°s tiempo. Intenta refrescar la p√°gina en unos minutos.');
      }
    }
  }, 30000); // Cada 30 segundos
  
  console.log('\n‚è±Ô∏è Verificando cada 30 segundos... (Ctrl+C para cancelar)');
}

monitorBusinessName();
